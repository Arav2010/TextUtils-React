{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","console","log","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86d1160e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n      )\r\n}\r\n\r\n      Navbar.propTypes = {\r\n        title: PropTypes.string,\r\n      aboutText: PropTypes.string\r\n}\r\n\r\n      Navbar.defaultProps = {\r\n        title: 'Set Title Here',\r\n      aboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was Clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\" Converted to Uppercase\", \"success\")\r\n  }\r\n  \r\n  const handleLoClick = () => {\r\n    console.log(\"Uppercase was Clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\" Converted to Lowercase\", \"success\")\r\n  } \r\n  \r\n  const handleClearClick = () => {\r\n    console.log(\"Uppercase was Clicked\" + text);\r\n    let newText = '';\r\n    setText(newText)\r\n    props.showAlert(\" Text Cleared\", \"success\")\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\" Copied to Clipboard\", \"success\")\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\" Extra Spaces Removed\", \"success\")\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n  // setText(\"newtext\");\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode=== 'dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode=== 'dark'?'grey':'white', color: props.mode=== 'dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleOnClick}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-2\" style={{color: props.mode=== 'dark'?'white':'black'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h3>Prewiew</h3>\r\n      <p>{text.length>0?text:\"Enter Something in The TextBox above to Preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) =>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\" Dark Mode Enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Light Mode Enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Text-Utils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze Below\" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}